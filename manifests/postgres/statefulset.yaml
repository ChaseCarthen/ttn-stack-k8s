apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: thingstack
spec:
  updateStrategy:
    type: RollingUpdate
  
  selector:
    matchLabels:
      app: postgres

  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres 
    spec:
      volumes:
        - name: postgres-config
          configMap:
            name: postgres
            
      terminationGracePeriodSeconds: 10

      containers:
        - name: postgres
          image: postgres:14
          #args: ['-c', 'config_file=/etc/postgres.conf', '-c', 'hba_file=/etc/pg_hba.conf']
          args: ['-c','hba_file=/etc/pg_hba.conf']
          imagePullPolicy: IfNotPresent
        
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          
          resources:
            requests:
              cpu: 2
              memory: 1024M
          
          env:
            - name: POSTGRES_USER
              value: root
          
            - name: PGUSER
              value: root
          
            - name: POSTGRES_DB
              value: ttn_lorawan_dev
            
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          
            - name: POSTGRES_PASSWORD
              value: root
              #valueFrom:
              #  secretKeyRef:
              #    key: password
              #    name: postgres
                  
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
              
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 6
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - exec pg_isready --host $POD_IP
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3

          volumeMounts:
            - mountPath: /var/lib/postgresql/data/pgdata
              name: postgres
              subPath: postgres-db
              
            #- name: postgres-config
            #  mountPath: /etc/postgres.conf
            #  subPath: postgres.conf
            #  
            #- name: postgres-config
            #   mountPath: /etc/master.conf
            #   subPath: master.conf
              
            - name: postgres-config
              mountPath: /etc/pg_hba.conf
              subPath: pg_hba.conf
              
            # - name: postgres-config
            #   mountPath: /docker-entrypoint-initdb.d/create-replica-user.sh
            #   subPath: create-replica-user.sh
          
  volumeClaimTemplates:
  - metadata:
      name: postgres
    spec:
      storageClassName: rook-ceph-block
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: thingstack
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: postgres
      protocol: TCP
  type: ClusterIP
  selector:
    app: postgres